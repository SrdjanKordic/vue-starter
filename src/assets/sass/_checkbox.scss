// Forms

.col-form-label {
	font-size: 16px;

	&-sm {
		font-size: $font-size-sm;
	}

	&-lg {
		font-size: $font-size-lg;
	}
}

textarea,
textarea.form-control,
input.form-control,
input[type='text'],
input[type='password'],
input[type='email'],
input[type='number'],
[type='text'].form-control,
[type='password'].form-control,
[type='email'].form-control,
[type='tel'].form-control,
[contenteditable].form-control {
	box-shadow: inset 0 -1px 0 #ddd;
	transition: box-shadow 0.2s;

	&:focus {
		box-shadow: inset 0 -2px 0 $primary;
	}

	&[disabled],
	&[readonly] {
		box-shadow: none;
		border-bottom: 1px dotted #ddd;
	}

	&[disabled],
	&[disabled]::placeholder {
		color: #ddd;
	}

	&::-ms-clear {
		display: none;
	}
}

select,
select.form-control {
	appearance: none;
	padding: 0.5rem 0;
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='4' viewBox='0 0 8 4'%3e%3cpolygon fill='%23666' points='8 0 4 4 0 0'/%3e%3c/svg%3e%0a");
	background-size: 8px 4px;
	background-repeat: no-repeat;
	background-position: right center;
	box-shadow: inset 0 -1px 0 #ddd;

	&::-ms-expand {
		display: none;
	}

	&.input {
		&-sm {
			font-size: $font-size-sm;
		}

		&-lg {
			font-size: $font-size-lg;
		}
	}

	&:focus {
		box-shadow: inset 0 -2px 0 $primary;
		background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='4' viewBox='0 0 8 4'%3e%3cpolygon fill='%23212121' points='8 0 4 4 0 0'/%3e%3c/svg%3e%0a");
	}

	&[multiple] {
		background: none;
	}
}

.form-check-input {
	width: 1.25em;
	height: 1.25em;
	margin-top: 1px;
	border: 2px solid $gray-400;

	&:checked[type='radio'] {
		background-size: 1.8em;
		background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%232196f3' stroke='%23fff' stroke-width='1' /%3e%3c/svg%3e"),
			var(--bs-gradient);
	}
}

.form-check.form-switch {
	.form-check-input {
		position: relative;
		height: 0.8em;
		border: none;
		background-image: none;
		background-color: $gray-400;

		&:focus {
			box-shadow: none;
		}

		&::before {
			content: '';
			position: absolute;
			top: -0.2em;
			left: -0.2em;
			width: 1.2em;
			height: 1.2em;
			background-color: $white;
			border-radius: 50%;
			box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);
			transition: left 0.15s ease-in-out;
		}

		&::after {
			content: '';
			position: absolute;
			top: -0.2em;
			left: -0.2em;
			width: 1.2em;
			height: 1.2em;
			border-radius: 50%;
			box-shadow: 0 0 0 9px rgba(0, 0, 0, 0.05);
			transform: scale(0);
			transition: left 0.15s ease-in-out, transform 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
			z-index: -1;
		}

		&:hover:not(.disabled),
		&:focus:not(.disabled) {
			&::after {
				transform: scale(0.9);
			}
		}

		&:focus:not(.disabled) {
			&::after {
				box-shadow: 0 0 0 9px rgba(0, 0, 0, 0.1);
			}
		}

		&:checked {
			background-color: rgba(33, 150, 243, 0.3);

			&::before {
				background-color: rgba(33, 150, 243, 1);
				left: calc(100% - 0.8em);
			}

			&::after {
				left: calc(100% - 0.8em);
				box-shadow: 0 0 0 9px rgba(33, 150, 243, 0.1);
			}

			&:hover:not(.disabled),
			&:focus:not(.disabled) {
				&::after {
					transform: scale(0.9);
				}
			}

			&:focus:not(.disabled) {
				&::after {
					box-shadow: 0 0 0 9px rgba(33, 150, 243, 0.2);
				}
			}
		}
	}
}

.form-check:not(.form-switch) {
	.form-check-input {
		&:checked[type='checkbox'] {
			background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-width='2' d='M6 10l3 3l6-6'/%3e%3c/svg%3e"),
				var(--bs-gradient);
			background-size: 1.6em;
		}
	}
}

.has-warning {
	input:not([type='checkbox']),
	.form-control,
	input.form-control[readonly],
	input[type='text'][readonly],
	[type='text'].form-control[readonly],
	input:not([type='checkbox']):focus,
	.form-control:focus {
		border-bottom: none;
		box-shadow: inset 0 -2px 0 $warning;
	}
}

.has-danger {
	input:not([type='checkbox']),
	.form-control,
	input.form-control[readonly],
	input[type='text'][readonly],
	[type='text'].form-control[readonly],
	input:not([type='checkbox']):focus,
	.form-control:focus {
		border-bottom: none;
		box-shadow: inset 0 -2px 0 $danger;
	}
}

.has-success {
	input:not([type='checkbox']),
	.form-control,
	input.form-control[readonly],
	input[type='text'][readonly],
	[type='text'].form-control[readonly],
	input:not([type='checkbox']):focus,
	.form-control:focus {
		border-bottom: none;
		box-shadow: inset 0 -2px 0 $success;
	}
}

// Remove the Bootstrap feedback styles for input addons
.input-group-addon {
	.has-warning &,
	.has-danger &,
	.has-success & {
		color: $input-color;
		border-color: $input-group-addon-border-color;
		background-color: $input-group-addon-bg;
	}
}

.form-group-lg {
	select,
	select.form-control {
		line-height: 1.5;
	}
}
